/**
 * 分饼干 每个孩子都有一个胃口值g[i] 每个饼干尺寸s[j] 只有s[j] > g[i] 才能分给孩子
 * 每个孩子最多只有一个饼干 问怎么样能满足尽量多的孩子
 * 
 * 输入：g = [1,2,3], s = [1,1]
输出：1
解释：你有三个孩子和两块小饼干，3 个孩子的胃口值分别是：1, 2, 3。虽然你有两块小饼干，由于他们的尺寸都是 1，你只能让胃口值是 1 的孩子满足。所以应该输出 1。

输入: g = [1,2], s = [1,2,3]
输出: 2
解释: 你有两个孩子和三块小饼干，2个孩子的胃口值分别是1, 2。你拥有的饼干数量和尺寸都足以让所有孩子满足。所以你应该输出 2。

用贪心思维去做 就是每一步都是当前的最优解
分饼干的最优解就是： 孩子胃口和饼干大小排序 选出2值相近的 才能满足更多的孩子 所以第一步就是需要排序
 */

function solution(g, s) {
  g.sort((a, b) => a - b);
  s.sort((a, b) => a - b);
  let m = g.length;
  let n = s.length;
  let i = 0,
    j = 0,
    res = 0;
  while (i < m && j < n) {
    if (s[j] >= g[i]) {
      res++;
      i++;
      j++;
    } else {
      i++;
    }
  }
  return res;
}
console.log(solution([1, 2, 3], [1, 1]));
console.log(solution([1, 2], [1, 2, 3]));
